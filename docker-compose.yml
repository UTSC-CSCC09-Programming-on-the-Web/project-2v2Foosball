services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    networks:
      - foosball-network

  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - ./acme:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=yongle.he@mail.utoronto.ca
      - NGINX_PROXY_CONTAINER=nginx-proxy
    depends_on:
      - nginx-proxy
    networks:
      - foosball-network

  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - 5432
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - foosball-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Express Backend
  backend:
    image: ghcr.io/utsc-cscc09-programming-on-the-web/2025summer-foosball-backend:latest
    container_name: backend
    restart: always
    expose:
      - 3000
    environment:
      NODE_ENV: production
      FRONTEND_URL: ${FRONTEND_URL}
      BACKEND_URL: ${BACKEND_URL}
      PORT: ${PORT}
      DATABASE_URL: ${DATABASE_URL}

      OAUTH_GITHUB_CLIENT_ID: ${OAUTH_GITHUB_CLIENT_ID}
      OAUTH_GITHUB_CLIENT_SECRET: ${OAUTH_GITHUB_CLIENT_SECRET}
      JWT_SIGNING_KEY: ${JWT_SIGNING_KEY}
      CSRF_SECRET: ${CSRF_SECRET}

      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      STRIPE_MEMBERSHIP_PRODUCT_ID: ${STRIPE_MEMBERSHIP_PRODUCT_ID}

      VIRTUAL_HOST: api.foosball.games
      LETSENCRYPT_HOST: api.foosball.games
    depends_on:
      db:
        condition: service_healthy
    networks:
      - foosball-network

  # Angular Frontend
  frontend:
    image: ghcr.io/utsc-cscc09-programming-on-the-web/2025summer-foosball-frontend:latest
    container_name: frontend
    restart: always
    expose:
      - 80
    environment:
      VIRTUAL_HOST: foosball.games
      LETSENCRYPT_HOST: foosball.games
    networks:
      - foosball-network

volumes:
  db_data:
    driver: local

networks:
  foosball-network:
    driver: bridge
